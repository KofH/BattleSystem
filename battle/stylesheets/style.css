/****************************************
 *************** GENERAL ****************
 ****************************************/
*{
	margin: 0px;
	padding: 0px;
}
body{
	font:normal 14px/16px Arial, Helvetica, Sans-serif;
	margin: 0px;
}
#leftPanel{
	width: 50%;
	float: left;
}
#rightPanel{
	width: 50%;
	float: right;
}
/****************************************
 ************* MENU BUTTONS *************
 ****************************************/
.bodyTopBar {
	height: 25px;
	clear: both;
	max-width: 100%;
	background-color:#CCC;
}
.buttonTopMenu{
	height: 100%;
	width: auto;
	padding: 0px 10	px 0px 10px;
	border: 0px;
}
.buttonTopMenu:HOVER{
	background-color: #888;
	color: #FFF;
}
.buttonTopMenu:ACTIVE{
	background-color: #888;
	color: #000;
}
#buttonBugReport{
	float:right;
	background-color: #CCC;
}
/****************************************
 *************** CONTENT ****************
 ****************************************/
#infoFightersHeader{
	background-color: #EEEEEEE;
	height: 100%;
	width: 100%;
	margin-left: 2ex;
}
#infoFightersHeader,h3{
	margin-top: 1ex;
}

.infoFightersContentTitle{
	margin-top: auto;
}
.infoFightersContent,li{
	margin: 10px 0px 0px 10px;
	display: inline-block;
}
.infoFightersContent,ul {
	margin-left: 2ex;
}
/****************************************
 ******** NEW CHARACTER PROMPT***********
 ****************************************/
.newCharacterPrompt{
	display: none;
}
.newCharacterPrompt.Displayed{
	display:block;
	width: auto;
	max-width: 550px;
	position: fixed;
	left: 16%;
	top:15%;
	text-align: left;
    font:normal 12px/14px Arial, Helvetica, Sans-serif;
    color: #444;
    font-weight:bold;
}
.newCharacterPrompt fieldset {
    padding: 0px 25px;
    background-color: #eff4f6;
    border: 1px solid #C3D4DB;
    border-radius: 5px;
}
#newCharacterPromptStats > input, #newCharacterPromptEquipment > input,
#newCharacterPromptActions > input{
	margin-left: 5px;
	margin-bottom: 5px;	
}
.newCharacterInputAttr{
    width: 40px;
    margin-bottom: 5px;
}
.newCharacterInputName{
    width: auto;
    margin-bottom: 5px;
}
.newCharacterLabel{
    display: inline-block;
    float: left;
    clear: left;
    width: 75px;
    text-align: right;
    margin: 3px 0px 5px 0px;
}
#newCharacterPrompt p {
	text-align: center;
	margin: 5px 0px 0px 0px;
}
.newCharacterCheckBox{
	margin: 0px 0px 5px 0px;
	display: inline-block;
	width: 160px
}
#newCharacterFooter{
	text-align: center;
	font: normal 12px/14px Arial, Helvetica, Sans-serif;
	margin-bottom: 5px;
}
.newCharacterFooter{
	margin: 0px 15px 5px 15px;
	font-weight: bold;
	width: 55px;
}
#newCharacterPromptFactions{
	text-align: center;
	margin-bottom: -10px;
}
#newCharacterPromptFactions > label{
	margin: 0px 30px 0px 30px;
}
#newCharacterPromptStats, #newCharacterPromptEquipment {
	display: inline-block;
	vertical-align: top;
}
#actionList{
	margin-right: -50px;
}
/****************************************
 ******** LOAD AND SAVE PROMPT***********
 ****************************************/
 .loadAndSavePrompt {display: none;}
 .loadAndSavePrompt.Displayed{
	display:block;
	width: auto;
	top: 15%;
	position: fixed;
	left: 16%;
	font: normal 12px/14px Arial, Helvetica, Sans-serif;
	color: #444;
    font-weight:bold;
}
.loadAndSavePrompt fieldset{
	padding: 5px 5px 5px 5px;
    background-color: #eff4f6;
    border: 1px solid #C3D4DB;
    border-radius: 5px;
}
/****************************************
 *******MODIFY CHARACTERS PROMPT*********
 ****************************************/
.modifyCharactersPrompt{display: none;}
.modifyCharactersPrompt.Displayed{
	display: block;
	width: auto;
	top: 15%;
	position: fixed;
	left: 16%;
	font: normal 12px/14px Arial, Helvetica, Sans-serif;
	color: #444;
	font-weight: bold;
	baground-color: #000;
}
.modifyCharactersPrompt fieldset{
	padding: 5px 5px 5px 5px;
	background-color: #eff4f6;
	border: 1px solid #C3D4DB;
	border-radius: 5px;
}
.modifyCharactersFooter input{
	width: 8ex;
	margin: 5px 8% 5px 13%;
	font: normal 12px/14px Arial, Helvetica, Sans-serif;
	font-weight: bold;		
}

/* 
#test {
 	position: relative;
 }
#test::after{
 	content: attr(value) "/" attr(max);
 	position: absolute;
 	left: calc(100% + 1ex);
 }*/